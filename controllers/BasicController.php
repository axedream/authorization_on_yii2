<?php
namespace app\controllers;
use app\models\Action;
use app\models\LoggerUrl;
use yii\filters\AccessControl;
use yii\helpers\Json;
use yii\web\Controller;
use Yii;
use yii\web\Response;
use yii\helpers\Url;

/**
 * Class BasicController
 * @package app\controllers
 * @property string $group
 */
class BasicController extends Controller
{

    //меряем время загрузки страницы
    public $start_time;
    public $end_time;


    public $console_controller = ['create_fb'];

    /**
     * Массив массива меню
     *
     * @var array
     */
    public $items;

    /**
     * Массив меню
     *
     * @var array
     */
    public $menu;


    /**
     * Сообщение об ошибке
     *
     * @var
     */
    public $msg;
    /**
     * Наличие ошибки
     *
     * @var
     */
    public $error;

    /**
     * Код ошибки
     *
     * @var int
     */
    public $error_type = 0;


    /**
     * Данные к выдаче
     *
     * @var
     */
    public $data;

    /**
     * Работа с ссессиями
     *
     * @var
     */
    public $session;

    public function actionGet_content()
    {
        $html = $this->renderAjax('index');
        return Json::encode($html);
    }

    public function beforeAction($action)
    {
        $this->start_time = hrtime(true);
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function afterAction($action, $result)
    {
        return parent::afterAction($action, $result); // TODO: Change the autogenerated stub
    }

    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::class,
                'rules' => [
                    [
                        'allow' => false,
                        'roles' => ['?'],
                        'denyCallback' => function($rule, $action) {
                            return Yii::$app->response->redirect(Url::toRoute(['/userl/login']));
                        }

                    ],
                    [
                        'actions' => [],
                        'allow' => true,
                        'roles' => ['@'],
                        'matchCallback' => function ($rule, $action) {
                            // Имя текущего контроллера
                            $controller = Yii::$app->controller->id;
                            // Имя текущего экшена
                            $action = Yii::$app->controller->action->id;
                            //$out = ['action'=>$action,'controller'=>$controller];
                            //file_put_contents("c:\\OpenServer\\domains\\zm\\my.txt","\nВыводимые данные:\n\n".print_r($out,TRUE), FILE_APPEND | LOCK_EX );
                            $model = (Action::find()->where(['action'=>$action,'controller'=>$controller])->exists()) ? Action::findOne(['action'=>$action,'controller'=>$controller]) : 0;
                            if ($model) {
                                return Yii::$app->user->identity->getAccess($model->name);
                            } else {
                                return true;
                            }
                        }
                    ],
                ],
            ],
        ];
    }



    //------------------------------------------ REDIS ------------------------------------------//
    /**
     * Первичная инициализация для всех контроллеров
     */
    public function init()
    {
        $controller = isset(Yii::$app->controller->id) ? Yii::$app->controller->id : FALSE;
        if (!in_array($controller,$this->console_controller)) {
            if (isset(Yii::$app->session)) {
                $this->session = Yii::$app->session;
                if (!$this->session->isActive) {
                    $this->session->open();
                }
            }
        }

    }


    public function runAction($id, $params = [])
    {
        //отключаем токен проверки страниц
        $this->enableCsrfValidation = false;
        if(session_status() !== PHP_SESSION_ACTIVE) {
            session_start();
        }
        // session_start();

        return parent::runAction($id, $params); 
    }
	
    //---------------------------------------------------- AJAX ----------------------------------------//
    /**
     * Стандартная выдача сообщений
     *
     * @return array
     */
    public function out()
    {
        return ['error'=>$this->error, 'error_type'=>$this->error_type,'msg'=>$this->msg, 'data'=> ($this->error=='no') ? $this->data : '' ];
    }

    /**
     * Базовая инициализация
     */
    public function init_ajax()
    {
        $this->error = 'yes';
        $this->msg = Yii::$app->params['messages']['user']['error']['params'];
        Yii::$app->response->format = Response::FORMAT_JSON;
    }
    //---------------------------------------------------- END AJAX ----------------------------------------//


}